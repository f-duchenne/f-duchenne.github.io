solve(t(A2) %*% A2)
solve(A)
A2=matrix(c(-1,-0.5,0.5,0.5,-0.5,-1,0.5,0.5,0.5,0.5,-1,-0.5,0.5,0.5,-0.5,-1),4)
solve(A2)
-solve(A)
A2=matrix(c(-1,-0.5,0.5,0.5,-0.5,-1,0.5,0.5,0.5,0.5,-1,-0.5,0.5,0.5,-0.5,-1),4)
-solve(A2)
library(igraph)
A=matrix(c(-1,-0.5,0.5,0.5,-0.5,-1,0.5,0,0.5,0.5,-1,-0.5,0.5,0,-0.5,-1),4)
g=graph_from_adjacency_matrix(abs(t(A)),mode="directed",weighted="yes")
plot(g)
-solve(A)
A2=matrix(c(-1,-0.5,0.5,0.5,-0.5,-1,0.5,0.5,0.5,0.5,-1,-0.5,0.5,0.5,-0.5,-1),4)
-solve(A2)
A
A=I(5)
A
A=I(5,2)
A=I(5,ncol=2)
A=I(rep(1,2))
A=I(rep(-1,2))
A
A=I(rep(-1,2),ncol=)
A=I(rep(-1,2),ncol=2)
?I
??I
A=diag(rep(-1,2))
A
Omega(A)
Omega<- function(alpha) {
S <- nrow(alpha)
omega <- function(S, Sigma) {
m <- matrix(0, S, 1)
a <- matrix(0, S, 1)
b <- matrix(Inf, S, 1)
d <- pmvnorm(lower = rep(0, S), upper = rep(Inf, S), mean = rep(0, S), sigma = Sigma)
out <- d[1]^(1/S)
return(out)
}
f <- function(m) class(try(solve(t(m) %*% m), silent = T)) == "matrix"
if (f(alpha)[1] == FALSE) {
return(0)
}else {
Sigma <- solve(t(alpha) %*% alpha)
return(omega(S, Sigma))
}
}
Omega(A)
?lower.tri
lower.tri(A)
m[ col(m)!=row(m) ]
m=A
m[ col(m)!=row(m) ]
A
col(A)
row(A)
which(row(A)==1)
which(row(A)==col(A))
A[row(A)==col(A)]
A
A[1,2]=0.8
A[2,1]=0.01
-solve(A)%*%c(-0.5,-0.5)
-solve(A)%*%c(-0.1,-0.1)
A[2,1]=0.1
-solve(A)%*%c(-0.1,-0.1)
A[2,1]=0.5
-solve(A)%*%c(-0.1,-0.1)
A[1,2]=0.9
A
A[2,1]=0.9
-solve(A)%*%c(-0.1,-0.1)
solve(A)%*%c(-0.1,-0.1)
-solve(A)%*%c(-0.1,-0.1)
A[2,1]=1.1
-solve(A)%*%c(-0.1,-0.1)
A[1,2]=1.1
-solve(A)%*%c(-0.1,-0.1)
A
A[1,2]=10.1
-solve(A)%*%c(-0.1,-0.1)
########################### STRATIFIED SAMPLING to use iNEXT with "incidence_raw"
library(dplyr)
library(iNEXT)
library(reshape2)
library(gridExtra)
library(ggplot2)
nbsp=100
# a pool of species with a detection probability for each
sp_pool_site1=data.frame(sp=paste0("sp",1:nbsp),prob=exp(-runif(nbsp,0,10)),site="site1")
sp_pool_site2=data.frame(sp=paste0("sp",1:nbsp),prob=runif(nbsp,0,1),site="site2")
sp_pool_site2$prob[sample(1:nrow(sp_pool_site2),20)]=1e-2
sp_pool_site3=data.frame(sp=paste0("sp",1:nbsp),prob=runif(nbsp,0,1),site="site3")
sp_pool=rbind(sp_pool_site1,sp_pool_site2,sp_pool_site3) #put all sites together
pl1=ggplot(data=sp_pool,aes(x=prob))+geom_histogram(fill="white",color="black")+xlab("detection probability (abundance)")+ylab("Number of species")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_wrap(~site)
pl1
# a vector of different sampling effort
samp_vec =c(1,3) #sampling intensity
samp_events=c(5,10,20) #number of sampling events
# generate the records
nbtrial=10
resf=NULL
for(si in unique(sp_pool$site)){
pool=subset(sp_pool,site==si)
for(ii in samp_vec){
for(i in samp_events){
for(z in 1:i){
for(j in 1:nbtrial){
vec=c(sapply(pool$prob,function(x){rbinom(1,ii,x)}))
resf=rbind(resf,data.frame(sp=rep(pool$sp,vec),samp=ii,nbsamp=i,samp_event=z,site=si,trial=j))
}
}
}
}
}
b=resf %>% group_by(samp,site,trial,sp,nbsamp,samp_event) %>% count(name ="abund") #aggregate data per species, for each site and simulation parameters
b$id=paste(b$site,b$trial,b$nbsamp,b$samp,sep=".") #create a unique id for each simulations
comm=split(b, b$id) #creat a list fo community data, one dataframe per simulations
comm=lapply(comm,function(x){dcast(x,id+sp~samp_event,value.var="abund",fill=0)}) #put each data frame in the right format for iNEXT function
comm=lapply(comm,function(x){x[,-c(1:2)]}) #remove id columns
comm
library(vegan)
plot(specaccum(comm[[1]], "random"))
plot(specaccum(t(comm[[1]]), "random"))
t(comm[[1]])
comm_vegan=lapply(t,comm)
comm_vegan=lapply(comm,t)
comm_vegan
plot(specaccum(comm[[1]], "random"))
rarecurve(comm[[3]])
comm[[2]]
rarecurve(colsum(comm[[3]])
)
rarecurve(colSum(comm[[3]]))
rarecurve(colSums(comm[[3]]))
colSums(comm[[3]])
comm[[3]]
rarecurve(rowSums(comm[[3]]))
?rarecurve
plot(specaccum(comm[[1]], "random"))
plot(specaccum(comm_vegan=[[1]], "random"))
plot(specaccum(comm_vegan[[1]], "random"))
rarecurve(rowSums(comm_vegan[[3]]))
rarecurve(rowSums(comm_vegan[[1:3]]))
lapply(comm_vegan,colSums)
?rarecurve
comm_vegan[[3]]
comm_vegan[[3]]
mat=matrix(rpois(100,5),10,10)
rarecurve(mat)
rari=iNEXT(comm,q=0,size=c(50,100,500,1000),datatype ="incidence_raw")
ggiNEXT(rari, type=1, facet.var="Assemblage")
rari=iNEXT(comm[[1:10]],q=0,size=c(50,100,500,1000),datatype ="incidence_raw")
vec=c(sapply(pool$prob,function(x){rbinom(1,ii,x)}))
vec
library(dplyr)
library(iNEXT)
library(reshape2)
library(gridExtra)
library(ggplot2)
nbsp=100
# a pool of species with a detection probability for each
sp_pool_site1=data.frame(sp=paste0("sp",1:nbsp),prob=exp(-runif(nbsp,0,10)),site="site1")
sp_pool_site2=data.frame(sp=paste0("sp",1:nbsp),prob=runif(nbsp,0,1),site="site2")
sp_pool_site2$prob[sample(1:nrow(sp_pool_site2),20)]=1e-2
sp_pool_site3=data.frame(sp=paste0("sp",1:nbsp),prob=runif(nbsp,0,1),site="site3")
#sp_pool=sp_pool %>% group_by(site) %>% mutate(prob=prob/sum(prob))
sp_pool=rbind(sp_pool_site1,sp_pool_site2,sp_pool_site3) #put all sites together
pl1=ggplot(data=sp_pool,aes(x=prob))+geom_histogram(fill="white",color="black")+xlab("detection probability (abundance)")+ylab("Number of species")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_wrap(~site)
pl1
hist(sp_pool$prob)
##put manually two rares s
# a vector of different sampling effort
samp_vec =c(1,3) #sampling intensity
samp_events=c(5,10,20) #number of sampling events
# generate the records
nbtrial=10
resf=NULL
for(si in unique(sp_pool$site)){
pool=subset(sp_pool,site==si)
for(ii in samp_vec){
for(i in samp_events){
for(z in 1:i){
for(j in 1:nbtrial){
vec=c(sapply(pool$prob,function(x){rbinom(1,ii,x)}))
resf=rbind(resf,data.frame(sp=pool$sp,samp=ii,nbsamp=i,samp_event=z,site=si,trial=j))
}
}
}
}
}
b=resf %>% group_by(samp,site,trial,sp,nbsamp,samp_event) %>% count(name ="abund") #aggregate data per species, for each site and simulation parameters
b$id=paste(b$site,b$trial,b$nbsamp,b$samp,sep=".") #create a unique id for each simulations
comm=split(b, b$id) #creat a list fo community data, one dataframe per simulations
comm=lapply(comm,function(x){dcast(x,id+sp~samp_event,value.var="abund",fill=0)}) #put each data frame in the right format for iNEXT function
comm=lapply(comm,function(x){x[,-c(1:2)]}) #remove id columns
library(vegan)
comm_vegan=lapply(comm,t)
comm_vegan[[1]]
vec
b=resf %>% group_by(samp,site,trial,sp,nbsamp,samp_event) %>% summarise(name =sum(abund)) #aggregate data per species, for each site and simulation parameters
b
resf
# generate the records
nbtrial=10
resf=NULL
for(si in unique(sp_pool$site)){
pool=subset(sp_pool,site==si)
for(ii in samp_vec){
for(i in samp_events){
for(z in 1:i){
for(j in 1:nbtrial){
vec=c(sapply(pool$prob,function(x){rbinom(1,ii,x)}))
resf=rbind(resf,data.frame(sp=pool$sp,count=vec,samp=ii,nbsamp=i,samp_event=z,site=si,trial=j))
}
}
}
}
}
b=resf %>% group_by(samp,site,trial,sp,nbsamp,samp_event) %>% summarise(sum(count)) #aggregat
b
b=resf %>% group_by(samp,site,trial,sp,nbsamp,samp_event) %>% summarise(abund=sum(count)) #aggregate data per species, for each site and simulation parameters
b$id=paste(b$site,b$trial,b$nbsamp,b$samp,sep=".") #create a unique id for each simulations
comm=split(b, b$id) #creat a list fo community data, one dataframe per simulations
comm=lapply(comm,function(x){dcast(x,id+sp~samp_event,value.var="abund",fill=0)}) #put each data frame in the right format for iNEXT function
comm=lapply(comm,function(x){x[,-c(1:2)]}) #remove id columns
library(vegan)
comm_vegan=lapply(comm,t)
comm_vegan[[1]]
#
liste=lapply(comm_vegan,colSums)
liste
rbind(liste)
rbind(unlist(liste))
str(rbind(unlist(liste)))
unlist(liste)
do.call(rbind,liste)
tab=do.call(rbind,liste)
rarecurve(tab[1:10,])
rarefy(x = tab, sample = 50)
rlnorm(100)
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
hist(rlnorm(100))
library(vegan)
comm_vegan=lapply(comm,t)
plot(specaccum(comm_vegan[[1]], "random"))
plot(specaccum(comm_vegan[[2]], "random"))
rarefy(x = comm[[1]], sample = 10)
liste=lapply(comm_vegan,colSums)
tab=do.call(rbind,liste)
rarecurve(tab[1:10,])
rarefy(x = tab, sample = 50)
rarefy(x = tab, sample = 50)
names(obj)
obj=rarefy(x = tab, sample = 50)
names(obj)
library(vegan)
comm_vegan=lapply(comm,t)
plot(specaccum(comm_vegan[[1]], "random"))
liste=lapply(comm_vegan,colSums)
tab=do.call(rbind,liste)
obj=rarefy(x = tab, sample = 50)
rarefaction=data.frame(predicted=obj,m=50,id=nameS(obj
)
rarefaction=data.frame(predicted=obj,m=50,id=name(obj))
rarefaction=data.frame(predicted=obj,m=50,id=names(obj))
rarefaction
rarefaction=data.frame(predicted=obj,m=50,id=names(obj))
rarefaction=merge(rarefaction,unique(b[,c("id","site","samp","trial","nbsamp")]),by="id") #adding information about parameters of simulations to that
rarefaction
ggplot(data=rich_out,aes(x=as.factor(nbsamp),y=Estimator,color=as.factor(samp)))+geom_boxplot()+xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_wrap(~site)+geom_hline(aes(yintercept=100))
ggplot(data=rarefaction,aes(x=as.factor(nbsamp),y=Estimator,color=as.factor(samp)))+geom_boxplot()+xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_wrap(~site)+geom_hline(aes(yintercept=100))
rarefaction=data.frame(Estimator=obj,m=50,id=names(obj))
rarefaction=merge(rarefaction,unique(b[,c("id","site","samp","trial","nbsamp")]),by="id") #adding information about parameters of simulations to that
ggplot(data=rarefaction,aes(x=as.factor(nbsamp),y=Estimator,color=as.factor(samp)))+geom_boxplot()+xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_wrap(~site)+geom_hline(aes(yintercept=100))
library(dplyr)
library(iNEXT)
library(reshape2)
library(gridExtra)
library(ggplot2)
nbsp=100
# a pool of species with a detection probability for each
sp_pool_site1=data.frame(sp=paste0("sp",1:nbsp),prob=exp(-runif(nbsp,0,10)),site="site1")
sp_pool_site2=data.frame(sp=paste0("sp",1:nbsp),prob=runif(nbsp,0,1),site="site2")
#sp_pool_site2$prob[sample(1:nrow(sp_pool_site2),20)]=1e-2
sp_pool_site3=data.frame(sp=paste0("sp",1:nbsp),prob=runif(nbsp,0,1),site="site3")
#sp_pool=sp_pool %>% group_by(site) %>% mutate(prob=prob/sum(prob))
sp_pool=rbind(sp_pool_site1,sp_pool_site2,sp_pool_site3) #put all sites together
pl1=ggplot(data=sp_pool,aes(x=prob))+geom_histogram(fill="white",color="black")+xlab("detection probability (abundance)")+ylab("Number of species")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_wrap(~site)
pl1
hist(sp_pool$prob)
##put manually two rares s
# a vector of different sampling effort
samp_vec =c(1,3) #sampling intensity
samp_events=c(5,10,20) #number of sampling events
# generate the records
nbtrial=10
resf=NULL
for(si in unique(sp_pool$site)){
pool=subset(sp_pool,site==si)
for(ii in samp_vec){
for(i in samp_events){
for(z in 1:i){
for(j in 1:nbtrial){
vec=c(sapply(pool$prob,function(x){rbinom(1,ii,x)}))
resf=rbind(resf,data.frame(sp=pool$sp,count=vec,samp=ii,nbsamp=i,samp_event=z,site=si,trial=j))
}
}
}
}
}
b=resf %>% group_by(samp,site,trial,sp,nbsamp,samp_event) %>% summarise(abund=sum(count)) #aggregate data per species, for each site and simulation parameters
b$id=paste(b$site,b$trial,b$nbsamp,b$samp,sep=".") #create a unique id for each simulations
comm=split(b, b$id) #creat a list fo community data, one dataframe per simulations
comm=lapply(comm,function(x){dcast(x,id+sp~samp_event,value.var="abund",fill=0)}) #put each data frame in the right format for iNEXT function
comm=lapply(comm,function(x){x[,-c(1:2)]}) #remove id columns
library(vegan)
comm_vegan=lapply(comm,t)
plot(specaccum(comm_vegan[[1]], "random"))
liste=lapply(comm_vegan,colSums)
tab=do.call(rbind,liste)
obj=rarefy(x = tab, sample = 50)
rarefaction=data.frame(Estimator=obj,m=50,id=names(obj))
rarefaction=merge(rarefaction,unique(b[,c("id","site","samp","trial","nbsamp")]),by="id") #adding information about parameters of simulations to that
ggplot(data=rarefaction,aes(x=as.factor(nbsamp),y=Estimator,color=as.factor(samp)))+geom_boxplot()+xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_wrap(~site)+geom_hline(aes(yintercept=100))
obj=rarefy(x = tab, sample = 150)
rarefaction=data.frame(Estimator=obj,m=50,id=names(obj))
rarefaction=merge(rarefaction,unique(b[,c("id","site","samp","trial","nbsamp")]),by="id") #adding information about parameters of simulations to that
ggplot(data=rarefaction,aes(x=as.factor(nbsamp),y=Estimator,color=as.factor(samp)))+geom_boxplot()+xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_wrap(~site)+geom_hline(aes(yintercept=100))
obj
library(vegan)
comm_vegan=lapply(comm,t)
plot(specaccum(comm_vegan[[1]], "random"))
liste=lapply(comm_vegan,colSums)
tab=do.call(rbind,liste)
for(s in c(5,10,50,150)){
obj=rarefy(x = tab, sample = s)
}
rarf=NULL
for(s in c(5,10,50,150)){
obj=rarefy(x = tab, sample = s)
rarefaction=data.frame(Estimator=obj,m=50,id=names(obj))
rarefaction=merge(rarefaction,unique(b[,c("id","site","samp","trial","nbsamp")]),by="id") #adding information about parameters of simulations to that
raf=rbind(raf,rarefaction)
}
rarf=NULL
for(s in c(5,10,50,150)){
obj=rarefy(x = tab, sample = s)
rarefaction=data.frame(Estimator=obj,m=50,id=names(obj))
rarefaction=merge(rarefaction,unique(b[,c("id","site","samp","trial","nbsamp")]),by="id") #adding information about parameters of simulations to that
rarf=rbind(rarf,rarefaction)
}
ggplot(data=rarf,aes(x=as.factor(nbsamp),y=Estimator,color=as.factor(samp)))+geom_boxplot()+xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_wrap(~site)+geom_hline(aes(yintercept=100))
rarf=NULL
for(s in c(5,10,50,150)){
obj=rarefy(x = tab, sample = s)
rarefaction=data.frame(Estimator=obj,m=s,id=names(obj))
rarefaction=merge(rarefaction,unique(b[,c("id","site","samp","trial","nbsamp")]),by="id") #adding information about parameters of simulations to that
rarf=rbind(rarf,rarefaction)
}
ggplot(data=rarf,aes(x=as.factor(nbsamp),y=Estimator,color=as.factor(samp)))+geom_boxplot()+xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_grid(cols=vars(site),rows=vars(m))+geom_hline(aes(yintercept=100))
ggplot(data=rarf,aes(x=as.factor(nbsamp),y=Estimator,color=as.factor(samp)))+geom_boxplot()+xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_grid(cols=vars(site),rows=vars(m))+geom_hline(aes(yintercept=100))+scale_y_log10()
for(s in c(5,10,50)){
obj=rarefy(x = tab, sample = s)
rarefaction=data.frame(Estimator=obj,m=s,id=names(obj))
rarefaction=merge(rarefaction,unique(b[,c("id","site","samp","trial","nbsamp")]),by="id") #adding information about parameters of simulations to that
rarf=rbind(rarf,rarefaction)
}
ggplot(data=rarf,aes(x=as.factor(nbsamp),y=Estimator,color=as.factor(samp)))+geom_boxplot()+xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_grid(cols=vars(site),rows=vars(m))+geom_hline(aes(yintercept=100))+scale_y_log10()
rari=iNEXT(comm[[1:10]],q=0,size=c(50,100,500,1000),datatype ="incidence_raw")
comm[[1]]
rari=iNEXT(comm,q=0,size=c(50,100,500,1000),datatype ="incidence_raw")
str(rari)
str(rari$iNextEst)
str(rari$AsyEst)
rari=iNEXT(comm,q=0,size=c(5,10,50),datatype ="incidence_raw")
str(rari)
str(rari$iNextEst)
str(rari$AsyEst)
rich_out=subset(rari$iNextEst$size_based,t %in% c(5,10,50)) #extract the predicted richness
rich_out=merge(rich_out,unique(b[,c("id","site","samp","trial","nbsamp")]),by.x="Assemblage",by.y="id") #adding information about parameters of simulations to that
rich_out=subset(rari$iNextEst$size_based,t %in% c(5,10,50) & Diversity=="Species richness") #extract the predicted richness
rich_out=subset(rari$iNextEst$size_based,t %in% c(5,10,50) & Order.q==0) #extract the predicted richness
rich_out=merge(rich_out,unique(b[,c("id","site","samp","trial","nbsamp")]),by.x="Assemblage",by.y="id") #adding information about parameters of simulations to that
ggplot(data=rich_out,aes(x=as.factor(nbsamp),y=Estimator,color=as.factor(samp)))+geom_boxplot()+xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_grid(cols=vars(site),rows=vars(t))+geom_hline(aes(yintercept=100))+scale_y_log10()
ggplot(data=rich_out,aes(x=as.factor(nbsamp),y=qD,color=as.factor(samp)))+geom_boxplot()+xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_grid(cols=vars(site),rows=vars(t))+geom_hline(aes(yintercept=100))+scale_y_log10()
bidon=susbet(rich_out,site=="site1")
bidon=subset(rich_out,site=="site1")
ggplot(data=bidon,aes(x=nbsamp,y=qD,color=as.factor(samp),fill=as.factor(samp)))+stat_smooth(method="lm")+
xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),panel.background = element_blank(),
plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_grid(cols=vars(site),rows=vars(t))+geom_hline(aes(yintercept=100))+scale_y_log10()
ggplot(data=bidon,aes(x=nbsamp,y=qD,color=as.factor(samp),fill=as.factor(samp)))+stat_smooth(method="lm")+
xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),panel.background = element_blank(),
plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_grid(cols=vars(t))+geom_hline(aes(yintercept=100))+scale_y_log10()
ggplot(data=bidon,aes(x=nbsamp,y=qD,color=as.factor(samp),fill=as.factor(samp)))+stat_smooth(method="lm")+
xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),panel.background = element_blank(),
plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_grid(cols=vars(t))
ggplot(data=bidon,aes(x=nbsamp,y=qD,color=as.factor(samp),fill=as.factor(samp)))+stat_smooth(method="lm")+
xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),panel.background = element_blank(),
plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_grid(cols=vars(t))
ggplot(data=rich_out,aes(x=as.factor(nbsamp),y=qD,color=as.factor(samp)))+geom_boxplot()+xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_grid(cols=vars(site),rows=vars(t))+geom_hline(aes(yintercept=100))+scale_y_log10()
############# RAREFACTION VEGAN
library(vegan)
comm_vegan=lapply(comm,t)
plot(specaccum(comm_vegan[[1]], "random"))
liste=lapply(comm_vegan,colSums)
tab=do.call(rbind,liste)
rarf=NULL
for(s in c(5,10,50)){
obj=rarefy(x = tab, sample = s)
rarefaction=data.frame(Estimator=obj,m=s,id=names(obj))
rarefaction=merge(rarefaction,unique(b[,c("id","site","samp","trial","nbsamp")]),by="id") #adding information about parameters of simulations to that
rarf=rbind(rarf,rarefaction)
}
ggplot(data=rarf,aes(x=as.factor(nbsamp),y=Estimator,color=as.factor(samp)))+geom_boxplot()+xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_grid(cols=vars(site),rows=vars(m))+geom_hline(aes(yintercept=100))+scale_y_log10()
library(vegan)
comm_vegan=lapply(comm,t)
plot(specaccum(comm_vegan[[1]], "random"))
liste=lapply(comm_vegan,colSums)
tab=do.call(rbind,liste)
rarf=NULL
for(s in c(50,100,500)){
obj=rarefy(x = tab, sample = s)
rarefaction=data.frame(Estimator=obj,m=s,id=names(obj))
rarefaction=merge(rarefaction,unique(b[,c("id","site","samp","trial","nbsamp")]),by="id") #adding information about parameters of simulations to that
rarf=rbind(rarf,rarefaction)
}
ggplot(data=rarf,aes(x=as.factor(nbsamp),y=Estimator,color=as.factor(samp)))+geom_boxplot()+xlab("Number of sampling events")+ylab("Richness estimation")+
theme_bw()+theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),plot.title=element_text(size=14,face="bold",hjust = 0),
strip.background=element_rect(fill=NA,color=NA),panel.border=element_blank(),legend.position="none")+
facet_grid(cols=vars(site),rows=vars(m))+geom_hline(aes(yintercept=100))+scale_y_log10()
